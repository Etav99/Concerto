@attribute [Authorize]
@page "/chat/{SelectedConversationId:long}"
@page "/chat"

@using Concerto.Client.Components
@using Concerto.Client.Components.Lists
@using Concerto.Client.Services
@using Concerto.Shared.Extensions

@using Concerto.Shared.Models.Dto
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@inject IChatService ChatService
@inject IUserService UserService
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Chat</PageTitle>

@if (Render)
{
	<MudStack Row="true" Justify="Justify.Center" Style="height:100%">
		<MudPaper Width="350px">
			<ConversationList SelectedConversationId="SelectedConversationId" OnConversationSelected="ConversationSelected" />
		</MudPaper>
		<MudPaper Width="70%">
			<ChatBox SelectedConversation="SelectedConversation" @ref="chatBox" />
		</MudPaper>
	</MudStack>
}

@code
{
	[Parameter]
	public long? SelectedConversationId { get; set; }

	public Dto.Conversation? SelectedConversation { get; set; }

	private Concerto.Client.Components.ChatBox? chatBox;

	bool Render => !SelectedConversationId.HasValue && SelectedConversationId > 0;

	public void ConversationSelected(Dto.Conversation conversation)
	{
		NavigationManager.NavigateTo($"chat/{conversation.Id}");
		SelectedConversation = conversation;
		StateHasChanged();
	}
}