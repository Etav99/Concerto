@page "/contacts"
@using Concerto.Client.Components
@using Concerto.Client.Services
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

@inject HttpClient Http
@inject IChatService ChatService
@inject IUserService UserService

<PageTitle>Contacts</PageTitle>

@if (loading)
{
	<LoadingIndicator Color="Color.Primary" Size="Size.Large" />
}
else
{
	<MudTable Items="contacts" SortLabel="Sort By" Filter="new Func<Dto.User, bool>(UserFilter)"
		Class="flex-grow-1"  Style="height: 100%;" Hover="true" Elevation="0" FixedHeader="true" FixedFooter="true">
		<ToolBarContent>
			<MudText Typo="Typo.h6">Contacts</MudText>
			<MudSpacer />
			<MudTextField @bind-Value="contactSearchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
		</ToolBarContent>
		<HeaderContent>
			<MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Dto.User, object>(x=>x.Username)">Username</MudTableSortLabel></MudTh>
			<MudTh><MudTableSortLabel SortBy="new Func<Dto.User, object>(x=>x.FirstName)">First name</MudTableSortLabel></MudTh>
			<MudTh><MudTableSortLabel SortBy="new Func<Dto.User, object>(x=>x.LastName)">Last name</MudTableSortLabel></MudTh>
		</HeaderContent>
		<RowTemplate>
			<MudTd DataLabel="Username">@context.Username</MudTd>
			<MudTd DataLabel="First name">@context.FirstName</MudTd>
			<MudTd DataLabel="Last name">@context.LastName</MudTd>
		</RowTemplate>
		<PagerContent>
			<MudTablePager PageSizeOptions="new int[]{50, 100}" />
		</PagerContent>
	</MudTable>
}

@code
{
	private List<Dto.User> contacts = new List<Dto.User>();
	private bool loading = true;
	private string contactSearchString = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		loading = true;
		contacts = (await UserService.GetUsers()).ToList();
		loading = false;
	}

	private bool UserFilter(Dto.User user)
	{
		if (string.IsNullOrWhiteSpace(contactSearchString))
			return true;
		if (user.Username.Contains(contactSearchString, StringComparison.OrdinalIgnoreCase))
			return true;
		if ($"{user.FirstName} {user.LastName}".Contains(contactSearchString, StringComparison.OrdinalIgnoreCase))
			return true;
		return false;
	}
}