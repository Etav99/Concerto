@page "/contacts"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

@inject HttpClient Http

<PageTitle>Contacts</PageTitle>

@if (contacts == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudStack Row="true">
       <MudTable Items="contacts" Hover="true" SortLabel="Sort By" Elevation="0">
        <HeaderContent>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Dto.User, object>(x=>x.Username)">Username</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<Dto.User, object>(x=>x.FirstName)">First name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<Dto.User, object>(x=>x.LastName)">Last name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<Dto.User, object>(x=>x.UserId!)">User ID</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Username">@context.Username</MudTd>
            <MudTd DataLabel="First name">@context.FirstName</MudTd>
            <MudTd DataLabel="Last name">@context.LastName</MudTd>
            <MudTd DataLabel="User ID">@context.UserId</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>

    
    <MudStack>

    </MudStack>

    </MudStack>

}


@code {
	private Dto.User[]? contacts;

    protected override async Task OnInitializedAsync()
    {
        contacts = await Http.GetFromJsonAsync<Dto.User[]>("User/GetCurrentUserContacts");
    }
}