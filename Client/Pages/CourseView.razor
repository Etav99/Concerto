@attribute [Authorize]
@page "/courses/{SelectedCourseId:long}"
@using Concerto.Client.Components.Dialogs
@using Concerto.Client.Components
@using Concerto.Client.Components.Lists
@using Concerto.Client.Services
@using Concerto.Shared.Extensions

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager NavigationManager
@inject HttpClient Http;
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Course</PageTitle>

<MudPaper Class="d-flex flex-column" Height="100%" Elevation="4">

		<MudPaper Class="pa-2 mud-theme-primary" Square="false" Elevation="0">
			<MudStack Row="true" Justify="Justify.Center">
				<MudIcon Icon="@Icons.Material.Filled.MeetingCourse" />
				<MudText Align="Align.Center">@($"{SelectedCourse?.Name}")</MudText>
			</MudStack>
		</MudPaper>

		<MudStack Row="true" Justify="Justify.Center" AlignItems="AlignItems.Stretch" Class="pa-4" Style="height:calc(100% - 50px)">
			<MudPaper Class="" Elevation="0" Outlined="true">
				<CourseSessionList Class="" Style="height:calc(100% - 50px)" Course="SelectedCourse" OnSessionSelected="OnSessionSelected" />
			</MudPaper>
			<MudPaper Class="flex-grow-1" Elevation="0" Outlined="true">
				<ChatBox SelectedConversation="SelectedCourse?.Conversation" />
			</MudPaper>
		</MudStack>

</MudPaper>


@code {
	[Parameter]
	public long SelectedCourseId { get; set; } = 0;
	private Dto.Course? SelectedCourse { get; set; }
	
	protected override async Task OnInitializedAsync()
	{
		SelectedCourse = await Http.GetFromJsonAsync<Dto.Course?>($"Course/GetCourse?courseId={SelectedCourseId}");
		if (SelectedCourse == null)
		{
			NavigationManager.NavigateTo("courses");
		}
	}

	private void OnSessionSelected(Dto.Session session) {
		NavigationManager.NavigateTo($"sessions/{session.Id}");
	}

}