@using Concerto.Client.Extensions
@using Concerto.Client.Services;
@using Concerto.Shared.Models.Dto
@using System.Net.Http.Headers
@inject ISnackbar Snackbar
@inject HttpClient Http
@inject IAppSettingsService AppSettingsService
@inject IDialogService DialogService
@inject IStorageService StorageService

<MudDialog>
	<DialogContent>
		<MudPaper @ondragenter="@SetDragClass" @ondragleave="@ClearDragClass" @ondragend="@ClearDragClass" Height="300px" Outlined="true" Class="@DragClass">
			@if (!Clearing)
			{
				<InputFile OnChange="OnInputFileChanged" multiple class="absolute mud-width-full mud-height-full overflow-hidden z-2" style="opacity: 0;"/>
			}
			<MudText Typo="Typo.h6">Drag and drop files here or click</MudText>
			@foreach (var file in _fileNames)
			{
				<MudChip Color="Color.Dark" Text="@file"/>
			}
		</MudPaper>
	</DialogContent>

	<DialogActions>
		<MudButton OnClick="Upload" Disabled="@(!_fileNames.Any())" Color="Color.Primary" Variant="Variant.Filled">Upload</MudButton>
		<MudButton OnClick="Clear" Disabled="@(!_fileNames.Any())" Color="Color.Error" Variant="Variant.Filled">Clear</MudButton>
		<MudButton OnClick="Cancel">Cancel</MudButton>
	</DialogActions>
</MudDialog>

@code {

	[CascadingParameter]
	MudDialogInstance Dialog { get; set; } = null!;

	[Parameter]
	public long FolderId { get; set; }

	private bool Clearing;
	private static readonly string DefaultDragClass = "relative rounded-lg border-2 border-dashed pa-4 mt-4 mud-width-full mud-height-full";
	private string DragClass = DefaultDragClass;


	private readonly List<IBrowserFile> _files = new();
	private readonly List<string> _fileNames = new();

	private void OnInputFileChanged(InputFileChangeEventArgs e)
	{
		ClearDragClass();
		var files = e.GetMultipleFiles();
		foreach (var file in files)
		{
			_files.Add(file);
			_fileNames.Add(file.Name);
		}
	}

	private async Task Clear()
	{
		Clearing = true;
		_fileNames.Clear();
		ClearDragClass();
		await Task.Delay(100);
		Clearing = false;
	}

	private void Upload()
	{
		StorageService.QueueFilesToUpload(FolderId, _files);
		Dialog.Close();
	}

	private void SetDragClass()
	{
		DragClass = $"{DefaultDragClass} mud-border-primary";
	}

	private void ClearDragClass()
	{
		DragClass = DefaultDragClass;
	}

	void Cancel()
	{
		Dialog.Cancel();
	}

}