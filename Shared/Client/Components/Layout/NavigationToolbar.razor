@using Concerto.Shared.Client.Services
@inject IBreadcrumbsService BreadcrumbsService

<MudToolBar Style="overflow-x: auto; overflow-y: hidden; background-color: var(--mud-palette-appbar-background); color: var(--mud-palette-appbar-text); height: 28px;" Class="flex-grow-1 flex-shrink-1" DisableGutters="true" Dense="true">
	
	<MudHidden Invert="true" Breakpoint="Breakpoint.SmAndUp">
		<MudBreadcrumbs Class="py-0 flex-grow-1 flex-shrink-1" Style="color: inherit; flex-wrap: nowrap;" Items="_breadcrumbs.BreadcrumbItems" Separator=">">
			<ItemTemplate Context="item">
				<MudLink Color="Color.Inherit" Href="@item.Href" Class="d-inline-block">@item.Text</MudLink>
			</ItemTemplate>
			<SeparatorTemplate>
				<MudText Style="pointer-events: none;" Class="d-inline-block" Color="Color.Default">
					>
				</MudText>
			</SeparatorTemplate>
		</MudBreadcrumbs>
	</MudHidden>
	<MudHidden Invert="true" Breakpoint="Breakpoint.Xs">
		@{
			var lastItem = _breadcrumbs.BreadcrumbItems.Last();
			<MudText Color="Color.Inherit" Href="@lastItem.Href" Class="d-inline-block">@lastItem.Text</MudText>
		}
	</MudHidden>
</MudToolBar>

@code {
	BreadcrumbsPackage _breadcrumbs;

	protected override void OnInitialized()
	{
		BreadcrumbsService.BreadcrumbsChangeEventHandler += SetBreadcrumbs;
	}

	private void SetBreadcrumbs(object? sender, BreadcrumbsPackage breadcrumbsPackage)
	{
		_breadcrumbs = breadcrumbsPackage;
		StateHasChanged();
	}

	public void Dispose()
	{
		BreadcrumbsService.BreadcrumbsChangeEventHandler -= SetBreadcrumbs;
	}

}