// <auto-generated />
using System;
using Concerto.Server.Data.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Concerto.Server.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20220731213101_Contacts")]
    partial class Contacts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Concerto.Server.Data.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SubjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.HasIndex("SubjectId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1L,
                            FirstName = "Jan",
                            LastName = "Administracyjny",
                            SubjectId = new Guid("95f418ac-e38f-41ec-a2ad-828bdd3895d0"),
                            Username = "admin"
                        },
                        new
                        {
                            UserId = 2L,
                            FirstName = "Piotr",
                            LastName = "Testowy",
                            SubjectId = new Guid("9bb46cbd-c04c-4c1c-b129-8401d59c878d"),
                            Username = "user"
                        },
                        new
                        {
                            UserId = 3L,
                            FirstName = "Jacek",
                            LastName = "Testowy",
                            SubjectId = new Guid("71e82c06-a4d5-4c48-a8d3-8a9c8916790e"),
                            Username = "user1"
                        },
                        new
                        {
                            UserId = 4L,
                            FirstName = "John",
                            LastName = "Smith",
                            Username = "jsmith"
                        });
                });

            modelBuilder.Entity("Concerto.Server.Data.Models.UserContact", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContactId")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "ContactId");

                    b.HasIndex("ContactId");

                    b.ToTable("UserContacts");

                    b.HasData(
                        new
                        {
                            UserId = 1L,
                            ContactId = 2L
                        },
                        new
                        {
                            UserId = 2L,
                            ContactId = 1L
                        },
                        new
                        {
                            UserId = 1L,
                            ContactId = 3L
                        },
                        new
                        {
                            UserId = 1L,
                            ContactId = 4L
                        });
                });

            modelBuilder.Entity("Concerto.Server.Data.Models.UserContact", b =>
                {
                    b.HasOne("Concerto.Server.Data.Models.User", "Contact")
                        .WithMany("ContactOf")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Concerto.Server.Data.Models.User", "User")
                        .WithMany("Contacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Concerto.Server.Data.Models.User", b =>
                {
                    b.Navigation("ContactOf");

                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
